cmake_minimum_required(VERSION 3.1)
PROJECT(streamingnology_app_rtmp_proxy)
SET(CMAKE_CXX_STANDARD 17)
SET(CMAKE_CXX_STANDARD_REQUIRED TRUE)

set(CMAKE_MACOSX_RPATH 1)
set(CMAKE_SKIP_BUILD_RPATH FALSE)
set(CMAKE_INSTALL_RPATH_USE_LINK_PATH TRUE)

# Variables
SET(RTMPPROXY_DIR ${CMAKE_CURRENT_SOURCE_DIR})
SET(COMMON ${RTMPPROXY_DIR}/../../common)
SET(COMMON_SRC ${RTMPPROXY_DIR}/../../common/src)
SET(THIRD_BUILD_DIR ${RTMPPROXY_DIR}/../../common/3rd/build)

#Bento4
INCLUDE_DIRECTORIES(${THIRD_BUILD_DIR}/Bento4/include/C++/MetaData)
INCLUDE_DIRECTORIES(${THIRD_BUILD_DIR}/Bento4/include/C++/Crypto)
INCLUDE_DIRECTORIES(${THIRD_BUILD_DIR}/Bento4/include/C++/Core)
INCLUDE_DIRECTORIES(${THIRD_BUILD_DIR}/Bento4/include/C++/Codecs)
INCLUDE_DIRECTORIES(${THIRD_BUILD_DIR}/Bento4/include/C++/Adapters)
INCLUDE_DIRECTORIES(${THIRD_BUILD_DIR}/Bento4/include/C++)
LINK_DIRECTORIES(${THIRD_BUILD_DIR}/Bento4/lib)
#OpenSSL
SET(OPENSSL_ROOT_DIR ${THIRD_BUILD_DIR}/openssl)
FIND_PACKAGE(OpenSSL REQUIRED)
#rapidjson
INCLUDE_DIRECTORIES(${THIRD_BUILD_DIR}/rapidjson/include)
#easyloggingpp
#INCLUDE_DIRECTORIES(${THIRD_BUILD_DIR}/easyloggingpp/include)
#LINK_DIRECTORIES(${THIRD_BUILD_DIR}/easyloggingpp/lib)
#libuv
INCLUDE_DIRECTORIES(${THIRD_BUILD_DIR}/libuv/include)
LINK_DIRECTORIES(${THIRD_BUILD_DIR}/libuv/lib)
#uv-cpp
INCLUDE_DIRECTORIES(${THIRD_BUILD_DIR}/uv-cpp/include)
LINK_DIRECTORIES(${THIRD_BUILD_DIR}/uv-cpp/lib)
#ffmpeg
INCLUDE_DIRECTORIES(${THIRD_BUILD_DIR}/ffmpeg/include)
LINK_DIRECTORIES(${THIRD_BUILD_DIR}/ffmpeg/lib)
#gpac
#INCLUDE_DIRECTORIES(${THIRD_BUILD_DIR}/gpac/include)
#LINK_DIRECTORIES(${THIRD_BUILD_DIR}/gpac/lib)
#jwt
#INCLUDE_DIRECTORIES(${THIRD_BUILD_DIR}/common/3rd/git-submodule/jwt-cpp/include)

INCLUDE_DIRECTORIES(${RTMPPROXY_DIR}/src)
INCLUDE_DIRECTORIES(${COMMON_SRC})

ADD_SUBDIRECTORY(${COMMON} ${COMMON}/build)

# RTMPProxy 
AUX_SOURCE_DIRECTORY(${RTMPPROXY_DIR}/src RTMPPROXY_SOURCES)
AUX_SOURCE_DIRECTORY(${THIRD_BUILD_DIR}/easyloggingpp/include RTMPPROXY_SOURCES)
INCLUDE_DIRECTORIES(${THIRD_BUILD_DIR}/easyloggingpp/include)

add_definitions(-DELPP_THREAD_SAFE)

ADD_EXECUTABLE(RTMPProxy ${RTMPPROXY_SOURCES})
TARGET_LINK_LIBRARIES(RTMPProxy OpenSSL::SSL)
TARGET_LINK_LIBRARIES(RTMPProxy OpenSSL::Crypto)
TARGET_LINK_LIBRARIES(RTMPProxy uv pthread)
TARGET_LINK_LIBRARIES(RTMPProxy uv_cpp)
TARGET_LINK_LIBRARIES(RTMPProxy avcodec)
TARGET_LINK_LIBRARIES(RTMPProxy avfilter)
TARGET_LINK_LIBRARIES(RTMPProxy avformat)
TARGET_LINK_LIBRARIES(RTMPProxy avutil)
TARGET_LINK_LIBRARIES(RTMPProxy snycommon)
#TARGET_LINK_LIBRARIES(RTMPProxy easyloggingpp_a)
